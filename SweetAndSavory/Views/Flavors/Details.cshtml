@{
  Layout = "_Layout";
}
@model SweetAndSavory.Models.Flavor

<div class="card set-page text-center">
  <h1>@Html.DisplayFor(model => model.Name)</h1>
  <p><em>Treats in this Flavor</em></p>
  <hr>
  <br>
  @if(@Model.Treats.Count == 0)
  {
    <p>Sorry, No Treats are available for this Flavor</p>
  }
  else
  {
    
    @foreach(var join in Model.Treats)
    {
      <h3>@join.Treat.Name</h3>
      @using (Html.BeginForm("DeleteTreat", "Flavors"))
      {
        @Html.Hidden("joinid", @join.TreatFlavorId)
        @Html.HiddenFor(model => model.FlavorId)
        <input class = "btn btn-dark btn-sm" type="submit" value="Remove"/>
      }
    <br>
    }
  }
  <hr>
  @if(User.Identity.IsAuthenticated)
  {
    <p>@Html.ActionLink("Add a Treat to this Flavor", "AddTreat", new { id = Model.FlavorId }, new { @class = "btn btn-dark btn-lg"})</p>
    <p>@Html.ActionLink("Delete Flavor", "Delete", "Flavors", new { id = Model.FlavorId }, new { @class = "btn btn-dark btn-lg"})</p>
  }
  <p>@Html.ActionLink("All Flavors", "Index", "Flavors", null, new { @class = "btn btn-dark btn-lg"})</p>
</div>